고급 파이썬 프로그래밍 3주차

변수

- 일반적인 프로그램 구조
  1) 입력 단계 : 외부로부터 데이터 받아옴
  2) 처리 단계 : 데이터를 처리
  3) 출력 단계 : 결과 출력

- 변수 기본 개념
  1) 변수 : 처리할 자료나 결과 값을 보관하는 공간
  2) 변수를 이용해 컴퓨터 메모리에 이름 붙이고 자료 저장
  3) 변수는 값을 저장하는 그릇, 상자로 생각 가능

- 변수 선언
  1) 단순 변수 선언 불가

- 변수 대입
  1) 프로그램에서 '=' : 대입을 뜻함 ★
  2) 우변의 값이 좌편에 저장됨
  3) 대입의 의미
     1. '='는 변수에 값을 저장하라는 의미로 사용
     2. 같음은 '=='로 표현 ★
     3. 대부분 프로그래밍 언어에서 '='와 '=='는 파이썬과 같은 방식으로 사용

- 변수 값의 갱신
  1) '='를 이용해 변수 자신의 값 갱신 가능

- 변수 이름 짓기
  1) 변수도 변수와 변수들을 구별하기 위해 이름이 필요
  2) 작명의 규칙
     1. 변수의 이름은 영문자, 숫자, 밑줄 문자로 이루어짐
     2. 변수의 이름 중간에 공백 안됨
     3. 변수의 이름은 숫자로 시작 못함
     4. 변수의 이름에 쓰이는 영문자는 대문자 소문자 구별함
  3) 변수의 이름 지을 땐 변수 역할을 가장 잘 설명하는 이름 사용
  4) 다양한 언어 사용 가능하지만 알파벳 사용이 관례

- 변수 명명법
  1) 카멜 표기법 : 첫 단어는 첫 글자는 소문자, 이후 대문자
  2) 파스칼 표기법 : 단어의 첫 글자는 모두 대문자
  3) 스네이크 표기법 : 단어 사이에 _ 사용
  4) 헝가리안 표기법 : 변수 및 함수의 인자 이름 앞 데이터 타입 명시

- 문자열 입력
  1) 사용자로부터 숫자나 문자 입력 받아 출력
  2) input() 함수 사용

문자열

- 문자열
  1) 문자열은 문자들의 나열

- 문자열 입력
  1) 작은따옴표와 큰따옴표 사용
  2) 큰 따옴표로 열었으면 큰 따옴표로 닫아 줌
  3) 작은 따옴표로 열었으면 작은 따옴표로 닫아 줌

자료형

- 자료형 변환
  1) 문자열과 숫자는 서로 다르게 취급
  2) input으로 입력 받은 데이터는 모두 문자열 처리

연산자

- 수식
  1) 컴퓨터 사용시 복잡한 계산 직접 안해도 됨
  2) 수식을 올바르게 작성해 컴퓨터에 지시
  3) 연산자 활용 통해 코드의 길이 줄일 수 있음
  4) 올바른 수식 작성
     1. 수학 시간에 배우지 않은 새로운 연산자
     2. 연산자 우선순위
     3. 연산의 방향

- 산술 연산자
  1) 지수(제곱) ** -> 지수 연산자를 먼저 해야함 10 * 7 ** 2 는 7의 2승을 구하고 10을 곱해줌
  2) 나누기(몫) // -> 정수 나눗셈  / 는 실수 나눗셈임
  3) 나머지 %

- 대입 연산자
  1) 왼쪽 : 변수
  2) 오른쪽 : 수식 또는 값
  3) 여러 개의 변수에 동시에 값 저장 가능
  4) 여러 개의 변수에 동시에 값 저장 가능
      ex) x = y = 100

- 복합 대입 연산자
  1) 대입 연산자와 다른 연산자를 합쳐 놓은 것
  2) 연산자 우선 순위 잘못 파악 시 다른 결과 나옴

- 연산자 우선 순위
   1) 우선 순위 - 하나의 수식에 있는 연산 중 어떤 연산 먼저 할지 규칙
   ★ 지수 연산자 -> 곱셉, 나눗셈, 나머지 -> 비교 연산자 -> 동등연산자 -> 대입 연산자