{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyPZArA6ByAMHlhPj5En5mmr"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":7,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"w2ul4Z3v8PF2","executionInfo":{"status":"ok","timestamp":1684819995251,"user_tz":-540,"elapsed":995,"user":{"displayName":"백인원","userId":"17179721393715267006"}},"outputId":"9ebf944c-59c0-46b9-c5bd-6d7b1cfa575b"},"outputs":[{"output_type":"stream","name":"stdout","text":["<function <lambda> at 0x7f60bddd55a0>\n","24.202775031439355 [[0.71415563]] [0.28632063]\n","0 14.249700059840773 [[1.03986215]] [0.35820249]\n","400 0.0019502293394350692 [[2.02867739]] [0.89649087]\n","800 0.00012443616156030345 [[2.00724386]] [0.97385377]\n","1200 7.939762770837821e-06 [[2.00182979]] [0.99339551]\n","1600 5.066038044407498e-07 [[2.0004622]] [0.99833172]\n","2000 3.2324317751584296e-08 [[2.00011675]] [0.99957859]\n","2400 2.0624825730444533e-09 [[2.00002949]] [0.99989355]\n","2800 1.315985815054034e-10 [[2.00000745]] [0.99997311]\n","3200 8.396767508100019e-12 [[2.00000188]] [0.99999321]\n","3600 5.357634083029143e-13 [[2.00000048]] [0.99999828]\n","4000 3.418487305845128e-14 [[2.00000012]] [0.99999957]\n","4400 2.181196990049981e-15 [[2.00000003]] [0.99999989]\n","4800 1.391732647626567e-16 [[2.00000001]] [0.99999997]\n","5200 8.880075858166048e-18 [[2.]] [0.99999999]\n","5600 5.666011757941304e-19 [[2.]] [1.]\n","6000 3.615245561355704e-20 [[2.]] [1.]\n","6400 2.3068001561893477e-21 [[2.]] [1.]\n","6800 1.4718459168986166e-22 [[2.]] [1.]\n","7200 9.39610094284303e-24 [[2.]] [1.]\n","7600 6.018303465187052e-25 [[2.]] [1.]\n","8000 3.902479120910241e-26 [[2.]] [1.]\n"]}],"source":["import numpy as np\n","\n","# 학습데이터 준비\n","x_data = np.array([1,2,3,4,5]).reshape(5,1) # 5행 1열로 행렬 만듬\n","t_data = np.array([3,5,7,9,11]).reshape(5,1) \n","\n","# 임의의 직선 y = Wx+b 정의(임의의 값으로 가중치 w, 바이어스 b 초기화)\n","W = np.random.rand(1,1) # 입력 데이터 초기화 -> 1행 1열\n","b = np.random.rand(1) # 정답 데이터 초기화 -> 스칼라 값\n","\n","# 손실함수 l(W,b) 정의 (학습을 위한 정의)\n","def loss_func(x,t):\n","    y = np.dot(x,W)+b # dot은 행렬 곱\n","    return (np.sum((t-y)**2)) / (len(x))\n","\n","# 수치미분 numerical_derivative 및 utility 함수 정의 \n","def numerical_derivative(f,x): # f는 미분하고자 하는 다변수 함수, x는 모든 변수를 포함하고 있는 numpy 객체(배열, 행렬)등\n","    delta_x = 1e-5 #lim에 해당되는 작은 값\n","    grad = np.zeros_like(x) # 계산된 수치미분 값 저장 변수\n","\n","    it = np.nditer(x, flags =['multi_index'],op_flags=['readwrite'])# 모든 입력변수에 대해 편미분하기 위해 사용\n","    while not it.finished:\n","        idx = it.multi_index  # x에대한 편미분 후 y에 대한 편미분 실행  [1.0,2.0]이라면 1.0 편미분 후 2.0 편미분\n","        \n","        tmp_val = x[idx] # numpy 타입은 mutable이므로 원래 값 보관\n","        x[idx] = float(tmp_val)+delta_x #하나의 변수에 대해 수치미분 계산\n","        fx1 = f(x) # f(x+delta_x) 전체에 대해 계산해야 하기 때문에 x[idx]가 아닌 x를 넣어줌\n","\n","        x[idx] = tmp_val - delta_x\n","        fx2=f(x) # f(x-delta_x)\n","        grad[idx] = (fx1-fx2)/(2*delta_x)\n","\n","        x[idx] = tmp_val\n","        it.iternext()\n","\n","    return grad\n","\n","def loss_val(x,t):  # 손실함수값 확인 코드\n","    y = np.dot(x,W)+b # dot은 행렬 곱\n","    return (np.sum((t-y)**2)) / (len(x))\n","\n","def predict(x): # 예측값 확인 코드\n","    y = np.dot(x,W)+b \n","    return y\n","\n","# 학습률 초기화 및 손실함수가 최소가 될 때까지 W,b 업데이트\n","learning_rate = 1e-2 \n","\n","f = lambda x: loss_func(x_data,t_data) # loss_func에 x_data,t_data가 들어감\n","print(loss_val(x_data,t_data),W,b)\n","\n","for step in range(8001):\n","    W-= learning_rate * numerical_derivative(f,W) # w에 대한 수치미분\n","    b-= learning_rate * numerical_derivative(f,b) # b에 대한 수치미분\n","\n","    if(step % 400==0):\n","        print(step,loss_val(x_data,t_data),W,b)\n"]},{"cell_type":"code","source":["predict([7])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"vmulU3myA3Gp","executionInfo":{"status":"ok","timestamp":1684818594360,"user_tz":-540,"elapsed":8,"user":{"displayName":"백인원","userId":"17179721393715267006"}},"outputId":"bfb49c42-777f-4113-9f2e-03cd6705c9cb"},"execution_count":2,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([15.])"]},"metadata":{},"execution_count":2}]},{"cell_type":"code","source":[],"metadata":{"id":"C8bjvxkWA5JV"},"execution_count":null,"outputs":[]}]}