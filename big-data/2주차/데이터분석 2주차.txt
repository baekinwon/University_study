1 분석환경 설정 및 데이터 기본구조

데이터 기본구조
- 판다스는 파이썬 데이터 처리할 때 가장 빈번하게 사용되는 패키지 중 하나
- 판다스는 Series와 DataFrame 지원
- Series는 판다스 1차원 배열 구조로 모든 값에 대해 고유한 인덱스가 있고 
  하나의 데이터 형식으로 이루어져 있음
- DataFrame은 행과 열로 이루어진 2차원 배열 구조로 각 행 인덱스 가지고 각 열 서로 다른
  데이터 형태 가능함

df.set_index(keys = 'class',drop=True,append=False,inplace=True)
- keys: 인덱스로 사용하고자 하는 컬럼의 이름
- drop: 인덱스로 세팅한 컬럼을 DataFrame내에서 삭제할지 결정
- append: 기존에 존재하던 인덱스를 삭제할지, 컬럼으로 추가할지 결정
- inplace: 원본 객체를 변경할지 결정

df.reset_index(drop=False,inplace=True)
- drop: 기존 인덱스로 세팅한 컬럼을 DataFrame내에서 삭제할지 컬럼으로 추가할지 결정
- inplace: 원본 객체를 변경할지 결정


2 데이터프레임 기본

import pandas as pd
from sklearn.datasets import load_iris # 사이킷 런 iris 호출

iris = load_iris()
iris # iris데이터 호출

iris = pd.DataFrame(iris.data,columns=iris.feature_names) # iris.data는 딕셔너리 값을 배열로 호출함
                                                                             # feature_names는 특성 이름 호출

pd.set_option('display.max_columns',None)
pd.set_option('display.max_rows',None) # 모든 행과 열 출력하게 설정

iris.columns = iris.columns.str.replace(' ','_') # 컬럼 명에 공백이 있으면 언더 바로 대체함
                                                          # str.replace('기존 문자', '대체할 문자')

iris['sepal_length']=iris['sepal_length'].astype('int') # sepal_length열의 타입을 int로 바꿈


3 데이터프레임 선택, 추가 및 삭제

iris[1:4] # 1~3번째 인덱스 출력

iris.iloc[[1,3,5],2:4] # 1,3,5는 인덱스 2:4는 컬럼

iris.loc[[1,2],'sepal length (cm)':'petal length (cm)'] # 인덱스 1,2 컬럼은 sepal length 부터 petal length
                                                                   # loc 슬라이싱은 마지막 값 포함함