리스트

리스트 활용
- 많은 양의 자료를 사용하는 경우
- 여러 데이터를 묶어서 저장 및 관리

리스트 사용법
- 대괄호를 통해 시작과 끝 설정
- 요소 사이에 쉼표를 통해 구분
- 요소 : 리스트에 포함된 개별 값(항목)
- 인덱스 : 요소 위치

리스트의 가변성
- 리스트의 길이 변경 가능
- 리스트 요소 값 변경 가능
  ※튜플은 안됨

리스트의 형태적 특성
- 리스트 내의 요소는 임의의 자료 형을 가질 수 있음
- 리스트 내의 요소는 서로 다른 자료 형을 가질 수 있음
- 리스트 내부의 요소들의 순서가 다르면 다른 리스트로 판단

인덱스
- 리스트 요소의 위치를 알려주는 번호
- 리스트에서 인덱스는 0부터 시작
- 리스트의 크기를 벗어나는 인덱스는 사용 불가

리스트 생성 및 추가(확장)인덱스
- 크기가 0인 리스트 생성 가능
- append() : 요소 추가

함수

- 파이썬에서 프로그램을 분할하는 3가지 방법
- 함수 : 여러 개의 명령을 하나의 단위로 묶어 놓은 것
- 클래스 : 코드 중, 관련된 변수와 함수를 하나로 묶은 것
- 모듈 : 여러 개의 함수를 모아 놓은 것으로 프로그램 일부를 가지고 있는
  독립적인 파일로 관리하는 것

함수
- 특정 기능을 구현하는 부분을 따로 떼어 구현한 것
- 반복적으로 사용되는 의미 있는 부분
- 서브루틴, 루틴, 메서드, 프로시저
- 입력 값에 따른 결과값을 반환하는 것

- 함수를 만드는 과정 = 함수를 정의한다
- 함수를 사용하는 것 = 함수를 호출한다
- 한 번만 함수를 정의하면 언제든지 필요할 때 함수를 호출해 문제를
  처리할 수 있음
- 프로그램을 함수화하면 프로그램의 흐름을 일목요연하게 볼 수 있음

함수 정의
- 정의 방법 : def 함수명 (매개변수): + 코드 블록
- 정의로는 동작하지 않음 -> 호출 시 동작
- 반복문은 동일 위치에서 반복, 함수는 언제든지 재사용 가능

인수와 매개변수
- 사용자는 함수를 사용할 때 작업에 필요한 정보를 전달할 수 있음
- 인수 : 호출 프로그램에 의해 함수에 실제로 전달되는 값
- 매개변수 : 인수를 담아 함수 내에서 쓰이는 변수
- 매개변수의 숫자는 0개 이상의 숫자임

인수 전달
- 매개변수를 통해 인수 전달 가능
- 전달된 인수에 따라 함수의 동작이 달라짐

반환 값
- 함수로부터 되돌아오는 값
- 결과 값을 호출 위치로 돌려주는 기능을 구현
- return을 사용해 설정

지역변수와 전역변수
- 변수가 사용되는 범위에 따라 지역변수와 전역변수로 나눔
- 지역변수 : 함수 안에서 생성되어 사용되는 변수, 함수가 종료되면 사라짐
- 전역변수 : 프로그램의 어디서나 사용할 수 있음
- 변수의 범위는 변수의 사용 가능 영역과 변수가 생존하는 시간과 관련됨

전역변수
- 전역 변수는 함수 밖에서 만들어진 변수
- 함수 내에서도 사용 가능

지역변수 
- 함수 내부에서 만들어진 변수
- 함수 밖에서는 사용 불가능

키워드 인수
- 위치 인수 : 인수를 위치에 의해 구분
- 키워드 인수 : 인수 앞의 키워드에 따라 구분